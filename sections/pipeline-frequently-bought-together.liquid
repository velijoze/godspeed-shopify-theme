{% comment %}
  Pipeline Frequently Bought Together
  Bundle products with total savings display
{% endcomment %}

{%- liquid
  assign main_product = product
  assign bundle_products = section.settings.bundle_products | split: ','
  assign total_price = main_product.price
  assign total_compare_price = main_product.compare_at_price | default: main_product.price
  assign has_bundle_products = false
  
  for product_handle in bundle_products
    assign bundle_product = all_products[product_handle]
    if bundle_product and bundle_product.available
      assign has_bundle_products = true
      assign total_price = total_price | plus: bundle_product.price
      assign total_compare_price = total_compare_price | plus: bundle_product.compare_at_price | default: bundle_product.price
    endif
  endfor
  
  assign savings = total_compare_price | minus: total_price
-%}

{%- if has_bundle_products -%}
<div class="pipeline-bought-together section-{{ section.id }}-padding">
  <div class="page-width">
    
    <div class="bought-together__header">
      <h2 class="bought-together__title">{{ section.settings.heading | default: 'Frequently Bought Together' }}</h2>
      <p class="bought-together__subtitle">{{ section.settings.subtitle | default: 'Customers who bought this item also bought' }}</p>
    </div>

    <div class="bought-together__content">
      
      <div class="bought-together__products">
        
        {%- comment -%} Main Product {%- endcomment -%}
        <div class="bundle-product main-product">
          <div class="bundle-product__checkbox">
            <input type="checkbox" 
                   id="bundle-main" 
                   data-product-id="{{ main_product.id }}" 
                   data-variant-id="{{ main_product.selected_or_first_available_variant.id }}"
                   data-price="{{ main_product.price }}"
                   checked 
                   disabled>
            <label for="bundle-main" class="checkbox-custom"></label>
          </div>
          
          <div class="bundle-product__image">
            <img src="{{ main_product.featured_media.preview_image | image_url: width: 120 }}" 
                 alt="{{ main_product.title }}" 
                 width="120" 
                 height="120"
                 loading="lazy">
          </div>
          
          <div class="bundle-product__details">
            <h3 class="bundle-product__title">{{ main_product.title }}</h3>
            <div class="bundle-product__price">
              {%- if main_product.compare_at_price -%}
                <span class="price__sale">{{ main_product.price | money }}</span>
                <span class="price__regular">{{ main_product.compare_at_price | money }}</span>
              {%- else -%}
                <span class="price__current">{{ main_product.price | money }}</span>
              {%- endif -%}
            </div>
            <div class="bundle-product__badge main-badge">This Item</div>
          </div>
        </div>

        {%- comment -%} Plus Icon {%- endcomment -%}
        <div class="bundle-plus">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 4V20M4 12H20" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </div>

        {%- comment -%} Bundle Products {%- endcomment -%}
        {%- for product_handle in bundle_products limit: 3 -%}
          {%- assign bundle_product = all_products[product_handle] -%}
          {%- if bundle_product and bundle_product.available -%}
            
            <div class="bundle-product">
              <div class="bundle-product__checkbox">
                <input type="checkbox" 
                       id="bundle-{{ forloop.index }}" 
                       data-product-id="{{ bundle_product.id }}" 
                       data-variant-id="{{ bundle_product.selected_or_first_available_variant.id }}"
                       data-price="{{ bundle_product.price }}"
                       data-handle="{{ bundle_product.handle }}"
                       checked>
                <label for="bundle-{{ forloop.index }}" class="checkbox-custom"></label>
              </div>
              
              <div class="bundle-product__image">
                <img src="{{ bundle_product.featured_media.preview_image | image_url: width: 120 }}" 
                     alt="{{ bundle_product.title }}" 
                     width="120" 
                     height="120"
                     loading="lazy">
              </div>
              
              <div class="bundle-product__details">
                <h3 class="bundle-product__title">
                  <a href="{{ bundle_product.url }}">{{ bundle_product.title }}</a>
                </h3>
                <div class="bundle-product__price">
                  {%- if bundle_product.compare_at_price -%}
                    <span class="price__sale">{{ bundle_product.price | money }}</span>
                    <span class="price__regular">{{ bundle_product.compare_at_price | money }}</span>
                  {%- else -%}
                    <span class="price__current">{{ bundle_product.price | money }}</span>
                  {%- endif -%}
                </div>
                {%- if bundle_product.compare_at_price -%}
                  <div class="bundle-product__badge sale-badge">Sale</div>
                {%- endif -%}
              </div>
            </div>

            {%- unless forloop.last -%}
              <div class="bundle-plus">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 4V20M4 12H20" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                </svg>
              </div>
            {%- endunless -%}
            
          {%- endif -%}
        {%- endfor -%}

      </div>

      <div class="bought-together__summary">
        <div class="bundle-summary">
          
          <div class="bundle-total">
            <div class="bundle-total__label">Total Bundle Price:</div>
            <div class="bundle-total__prices">
              <span class="bundle-total__current" data-bundle-price>{{ total_price | money }}</span>
              {%- if savings > 0 -%}
                <span class="bundle-total__original" data-bundle-compare>{{ total_compare_price | money }}</span>
              {%- endif -%}
            </div>
          </div>

          {%- if savings > 0 -%}
            <div class="bundle-savings">
              <span class="savings-label">You Save:</span>
              <span class="savings-amount" data-bundle-savings>{{ savings | money }}</span>
            </div>
          {%- endif -%}

          <button class="bundle-add-button" data-add-bundle>
            <span class="bundle-button-text">Add Selected Items to Cart</span>
            <span class="bundle-button-price">{{ total_price | money }}</span>
          </button>

          <div class="bundle-items-count">
            <span data-bundle-count>{{ bundle_products.size | plus: 1 }}</span> items selected
          </div>

        </div>
      </div>

    </div>

  </div>
</div>
{%- endif -%}

<style>
  .pipeline-bought-together {
    background: #f8f9fa;
    margin: 3rem 0;
  }

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .bought-together__header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .bought-together__title {
    font-size: 2rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.5rem;
  }

  .bought-together__subtitle {
    color: #6b7280;
    font-size: 1.125rem;
  }

  .bought-together__content {
    display: grid;
    grid-template-columns: 1fr 300px;
    gap: 3rem;
    align-items: start;
  }

  .bought-together__products {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  .bundle-product {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    text-align: center;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    position: relative;
    flex: 0 0 auto;
    width: 200px;
  }

  .bundle-product:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }

  .bundle-product.main-product {
    border: 2px solid #667eea;
  }

  .bundle-product__checkbox {
    position: absolute;
    top: 1rem;
    left: 1rem;
  }

  .bundle-product__checkbox input {
    display: none;
  }

  .checkbox-custom {
    width: 20px;
    height: 20px;
    border: 2px solid #d1d5db;
    border-radius: 4px;
    display: block;
    cursor: pointer;
    position: relative;
    transition: all 0.2s ease;
  }

  .bundle-product__checkbox input:checked + .checkbox-custom {
    background: #667eea;
    border-color: #667eea;
  }

  .bundle-product__checkbox input:checked + .checkbox-custom:after {
    content: "âœ“";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 12px;
    font-weight: bold;
  }

  .bundle-product__checkbox input:disabled + .checkbox-custom {
    background: #e5e7eb;
    border-color: #e5e7eb;
    cursor: not-allowed;
  }

  .bundle-product__image {
    margin: 1rem 0 1.5rem;
  }

  .bundle-product__image img {
    width: 120px;
    height: 120px;
    object-fit: cover;
    border-radius: 8px;
  }

  .bundle-product__title {
    font-size: 0.9375rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 0.75rem;
    line-height: 1.3;
    height: 2.6em;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  .bundle-product__title a {
    color: inherit;
    text-decoration: none;
  }

  .bundle-product__title a:hover {
    color: #667eea;
  }

  .bundle-product__price {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
  }

  .price__sale,
  .price__current {
    font-weight: 700;
    color: #111827;
  }

  .price__regular {
    text-decoration: line-through;
    color: #9ca3af;
    font-size: 0.875rem;
  }

  .bundle-product__badge {
    display: inline-block;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
  }

  .main-badge {
    background: #667eea;
    color: white;
  }

  .sale-badge {
    background: #ef4444;
    color: white;
  }

  .bundle-plus {
    color: #9ca3af;
    flex-shrink: 0;
  }

  .bought-together__summary {
    position: sticky;
    top: 2rem;
  }

  .bundle-summary {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }

  .bundle-total {
    margin-bottom: 1.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #e5e7eb;
  }

  .bundle-total__label {
    font-size: 0.875rem;
    color: #6b7280;
    margin-bottom: 0.5rem;
  }

  .bundle-total__prices {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .bundle-total__current {
    font-size: 1.5rem;
    font-weight: 700;
    color: #111827;
  }

  .bundle-total__original {
    text-decoration: line-through;
    color: #9ca3af;
    font-size: 1.125rem;
  }

  .bundle-savings {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding: 1rem;
    background: #dcfce7;
    border-radius: 8px;
  }

  .savings-label {
    color: #166534;
    font-weight: 500;
  }

  .savings-amount {
    color: #166534;
    font-weight: 700;
    font-size: 1.125rem;
  }

  .bundle-add-button {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 1.5rem;
    background: #667eea;
    color: white;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-bottom: 1rem;
  }

  .bundle-add-button:hover {
    background: #5a67d8;
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(102, 126, 234, 0.3);
  }

  .bundle-items-count {
    text-align: center;
    color: #6b7280;
    font-size: 0.875rem;
  }

  @media (max-width: 768px) {
    .bought-together__content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    
    .bought-together__products {
      flex-direction: column;
      align-items: center;
    }
    
    .bundle-product {
      width: 100%;
      max-width: 280px;
    }
    
    .bundle-plus {
      transform: rotate(90deg);
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const bundleSection = document.querySelector('.pipeline-bought-together');
  if (!bundleSection) return;

  const checkboxes = bundleSection.querySelectorAll('input[type="checkbox"]:not([disabled])');
  const addButton = bundleSection.querySelector('[data-add-bundle]');
  const bundlePrice = bundleSection.querySelector('[data-bundle-price]');
  const bundleCompare = bundleSection.querySelector('[data-bundle-compare]');
  const bundleSavings = bundleSection.querySelector('[data-bundle-savings]');
  const bundleCount = bundleSection.querySelector('[data-bundle-count]');

  function updateBundleTotal() {
    let totalPrice = {{ main_product.price }};
    let totalCompare = {{ main_product.compare_at_price | default: main_product.price }};
    let selectedCount = 1; // Main product is always selected

    checkboxes.forEach(checkbox => {
      if (checkbox.checked) {
        totalPrice += parseInt(checkbox.dataset.price);
        totalCompare += parseInt(checkbox.dataset.price); // You might want to add compare price data
        selectedCount++;
      }
    });

    const savings = totalCompare - totalPrice;

    // Update displays
    if (bundlePrice) bundlePrice.textContent = Shopify.formatMoney(totalPrice);
    if (bundleCompare && savings > 0) bundleCompare.textContent = Shopify.formatMoney(totalCompare);
    if (bundleSavings && savings > 0) bundleSavings.textContent = Shopify.formatMoney(savings);
    if (bundleCount) bundleCount.textContent = selectedCount;

    // Update button
    if (addButton) {
      const buttonPrice = addButton.querySelector('.bundle-button-price');
      if (buttonPrice) buttonPrice.textContent = Shopify.formatMoney(totalPrice);
    }
  }

  // Listen for checkbox changes
  checkboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateBundleTotal);
  });

  // Handle add to cart
  if (addButton) {
    addButton.addEventListener('click', function() {
      const selectedProducts = [];
      
      // Add main product
      selectedProducts.push({
        id: {{ main_product.selected_or_first_available_variant.id }},
        quantity: 1
      });

      // Add selected bundle products
      checkboxes.forEach(checkbox => {
        if (checkbox.checked) {
          selectedProducts.push({
            id: parseInt(checkbox.dataset.variantId),
            quantity: 1
          });
        }
      });

      // Add to cart via AJAX
      const requests = selectedProducts.map(item => {
        return fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(item)
        });
      });

      Promise.all(requests)
        .then(responses => {
          // All items added successfully
          if (window.cartUpdated) {
            window.cartUpdated();
          }
          
          // Show success message
          addButton.textContent = 'Added to Cart!';
          addButton.style.background = '#22c55e';
          
          setTimeout(() => {
            addButton.innerHTML = '<span class="bundle-button-text">Add Selected Items to Cart</span><span class="bundle-button-price">' + bundlePrice.textContent + '</span>';
            addButton.style.background = '#667eea';
          }, 2000);
        })
        .catch(error => {
          console.error('Error adding bundle to cart:', error);
          alert('Error adding items to cart. Please try again.');
        });
    });
  }

  // Initialize
  updateBundleTotal();
});
</script>

{% schema %}
{
  "name": "Frequently Bought Together",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "Frequently Bought Together",
      "label": "Heading"
    },
    {
      "type": "text",
      "id": "subtitle",
      "default": "Customers who bought this item also bought",
      "label": "Subtitle"
    },
    {
      "type": "text",
      "id": "bundle_products",
      "label": "Bundle Product Handles",
      "info": "Enter product handles separated by commas (e.g., product-1,product-2,product-3)"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Frequently Bought Together"
    }
  ]
}
{% endschema %}