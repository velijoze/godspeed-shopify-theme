{% comment %}
  PIPELINE MASTER CONTROL PANEL
  Complete dashboard control for ALL Pipeline features
{% endcomment %}

<div class="pipeline-master-control">
  <div class="page-width">
    
    <div class="control-header">
      <h1>üéõÔ∏è Pipeline Master Control Panel</h1>
      <p>Control every aspect of your Pipeline theme features</p>
      
      <!-- Global Toggle -->
      <div class="global-controls">
        <label class="master-toggle">
          <input type="checkbox" id="pipeline-master-toggle" {% if section.settings.enable_all_pipeline %}checked{% endif %}>
          <span class="toggle-slider"></span>
          <span class="toggle-label">Enable All Pipeline Features</span>
        </label>
        
        <button onclick="resetAllSettings()" class="reset-btn">Reset to Defaults</button>
        <button onclick="exportSettings()" class="export-btn">Export Settings</button>
      </div>
    </div>

    <div class="control-tabs">
      <button class="tab-btn active" onclick="showTab('search')">üîç Search</button>
      <button class="tab-btn" onclick="showTab('zoom')">üîç Image Zoom</button>
      <button class="tab-btn" onclick="showTab('cart')">üõí Cart</button>
      <button class="tab-btn" onclick="showTab('gallery')">üñºÔ∏è Gallery</button>
      <button class="tab-btn" onclick="showTab('animations')">‚ú® Animations</button>
      <button class="tab-btn" onclick="showTab('performance')">‚ö° Performance</button>
      <button class="tab-btn" onclick="showTab('advanced')">‚öôÔ∏è Advanced</button>
    </div>

    <!-- SEARCH TAB -->
    <div id="search-tab" class="tab-content active">
      <div class="control-section">
        <h2>üîç Enhanced Search Controls</h2>
        
        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.enable_enhanced_search %}checked{% endif %}>
            <span>Enable Pipeline Search Modal</span>
          </label>
        </div>

        <div class="control-row">
          <label>Search Placeholder Text:</label>
          <input type="text" value="{{ section.settings.search_placeholder | default: 'Search our e-bikes...' }}">
        </div>

        <div class="control-row">
          <label>Background Blur Amount:</label>
          <input type="range" min="0" max="20" value="{{ section.settings.search_blur | default: 10 }}">
          <span class="range-value">{{ section.settings.search_blur | default: 10 }}px</span>
        </div>

        <div class="control-row">
          <label>Search Button Color:</label>
          <input type="color" value="{{ section.settings.search_button_color | default: '#2c2c2c' }}">
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.search_predictive %}checked{% endif %}>
            <span>Enable Predictive Search</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.search_close_on_outside %}checked{% endif %}>
            <span>Close on Outside Click</span>
          </label>
        </div>

        <div class="preview-box">
          <h4>Live Preview:</h4>
          <button onclick="document.querySelector('.header__search summary').click()">Test Search Modal</button>
        </div>
      </div>
    </div>

    <!-- ZOOM TAB -->
    <div id="zoom-tab" class="tab-content">
      <div class="control-section">
        <h2>üîç Product Image Zoom Controls</h2>
        
        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.enable_image_zoom %}checked{% endif %}>
            <span>Enable Product Image Zoom</span>
          </label>
        </div>

        <div class="control-row">
          <label>Desktop Zoom Level:</label>
          <input type="range" min="1.5" max="4" step="0.1" value="{{ section.settings.zoom_level | default: 2 }}">
          <span class="range-value">{{ section.settings.zoom_level | default: 2 }}x</span>
        </div>

        <div class="control-row">
          <label>Mobile Zoom Level:</label>
          <input type="range" min="1.2" max="3" step="0.1" value="{{ section.settings.mobile_zoom_level | default: 1.5 }}">
          <span class="range-value">{{ section.settings.mobile_zoom_level | default: 1.5 }}x</span>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.zoom_show_indicators %}checked{% endif %}>
            <span>Show Zoom Indicators</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.zoom_on_hover %}checked{% endif %}>
            <span>Zoom on Hover (Desktop)</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.zoom_fullscreen_mobile %}checked{% endif %}>
            <span>Full-screen Zoom on Mobile</span>
          </label>
        </div>

        <div class="control-row">
          <label>Zoom Animation Speed:</label>
          <select>
            <option value="fast" {% if section.settings.zoom_speed == 'fast' %}selected{% endif %}>Fast (0.2s)</option>
            <option value="normal" {% if section.settings.zoom_speed == 'normal' %}selected{% endif %}>Normal (0.3s)</option>
            <option value="slow" {% if section.settings.zoom_speed == 'slow' %}selected{% endif %}>Slow (0.5s)</option>
          </select>
        </div>

        <div class="preview-box">
          <h4>Live Preview:</h4>
          <div class="zoom-preview-image">
            <img src="{{ 'placeholder.svg' | asset_url }}" alt="Zoom preview" class="pipeline-zoomable">
          </div>
        </div>
      </div>
    </div>

    <!-- CART TAB -->
    <div id="cart-tab" class="tab-content">
      <div class="control-section">
        <h2>üõí Enhanced Cart Drawer Controls</h2>
        
        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.enable_enhanced_cart %}checked{% endif %}>
            <span>Enable Pipeline Cart Drawer</span>
          </label>
        </div>

        <div class="control-row">
          <label>Cart Drawer Width:</label>
          <input type="range" min="300" max="500" value="{{ section.settings.cart_width | default: 420 }}">
          <span class="range-value">{{ section.settings.cart_width | default: 420 }}px</span>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.cart_show_count_badge %}checked{% endif %}>
            <span>Show Item Count Badge</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.cart_blur_background %}checked{% endif %}>
            <span>Blur Background Overlay</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.cart_auto_open %}checked{% endif %}>
            <span>Auto-open After Add to Cart</span>
          </label>
        </div>

        <div class="control-row">
          <label>Cart Animation Style:</label>
          <select>
            <option value="slide" {% if section.settings.cart_animation == 'slide' %}selected{% endif %}>Slide In</option>
            <option value="fade" {% if section.settings.cart_animation == 'fade' %}selected{% endif %}>Fade In</option>
            <option value="scale" {% if section.settings.cart_animation == 'scale' %}selected{% endif %}>Scale In</option>
          </select>
        </div>

        <div class="control-row">
          <label>Checkout Button Style:</label>
          <select>
            <option value="rounded" {% if section.settings.cart_button_style == 'rounded' %}selected{% endif %}>Rounded</option>
            <option value="square" {% if section.settings.cart_button_style == 'square' %}selected{% endif %}>Square</option>
            <option value="pill" {% if section.settings.cart_button_style == 'pill' %}selected{% endif %}>Pill Shape</option>
          </select>
        </div>

        <div class="preview-box">
          <h4>Live Preview:</h4>
          <button onclick="document.querySelector('[data-cart-drawer]').click()">Open Cart Drawer</button>
        </div>
      </div>
    </div>

    <!-- GALLERY TAB -->
    <div id="gallery-tab" class="tab-content">
      <div class="control-section">
        <h2>üñºÔ∏è Product Gallery Controls</h2>
        
        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.enable_gallery_enhancements %}checked{% endif %}>
            <span>Enable Pipeline Gallery Styling</span>
          </label>
        </div>

        <div class="control-row">
          <label>Gallery Layout:</label>
          <select>
            <option value="grid" {% if section.settings.gallery_layout == 'grid' %}selected{% endif %}>Grid Layout</option>
            <option value="slider" {% if section.settings.gallery_layout == 'slider' %}selected{% endif %}>Slider Layout</option>
            <option value="stacked" {% if section.settings.gallery_layout == 'stacked' %}selected{% endif %}>Stacked Layout</option>
          </select>
        </div>

        <div class="control-row">
          <label>Image Border Radius:</label>
          <input type="range" min="0" max="24" value="{{ section.settings.gallery_border_radius | default: 12 }}">
          <span class="range-value">{{ section.settings.gallery_border_radius | default: 12 }}px</span>
        </div>

        <div class="control-row">
          <label>Gallery Hover Effect:</label>
          <select>
            <option value="lift" {% if section.settings.gallery_hover == 'lift' %}selected{% endif %}>Lift Up</option>
            <option value="scale" {% if section.settings.gallery_hover == 'scale' %}selected{% endif %}>Scale</option>
            <option value="none" {% if section.settings.gallery_hover == 'none' %}selected{% endif %}>No Effect</option>
          </select>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.gallery_show_badges %}checked{% endif %}>
            <span>Show Media Type Badges (Video, 3D)</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.gallery_lazy_load %}checked{% endif %}>
            <span>Lazy Load Gallery Images</span>
          </label>
        </div>
      </div>
    </div>

    <!-- ANIMATIONS TAB -->
    <div id="animations-tab" class="tab-content">
      <div class="control-section">
        <h2>‚ú® Animation Controls</h2>
        
        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.enable_animations %}checked{% endif %}>
            <span>Enable Pipeline Animations</span>
          </label>
        </div>

        <div class="control-row">
          <label>Animation Speed:</label>
          <select>
            <option value="slow" {% if section.settings.animation_speed == 'slow' %}selected{% endif %}>Slow (0.6s)</option>
            <option value="normal" {% if section.settings.animation_speed == 'normal' %}selected{% endif %}>Normal (0.3s)</option>
            <option value="fast" {% if section.settings.animation_speed == 'fast' %}selected{% endif %}>Fast (0.15s)</option>
          </select>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.scroll_animations %}checked{% endif %}>
            <span>Scroll-triggered Animations</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.hover_animations %}checked{% endif %}>
            <span>Hover Animations</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.button_ripple %}checked{% endif %}>
            <span>Button Ripple Effects</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.stagger_animations %}checked{% endif %}>
            <span>Staggered Product Animations</span>
          </label>
        </div>

        <div class="control-row">
          <label>Stagger Delay:</label>
          <input type="range" min="50" max="300" value="{{ section.settings.stagger_delay | default: 100 }}">
          <span class="range-value">{{ section.settings.stagger_delay | default: 100 }}ms</span>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.parallax_effects %}checked{% endif %}>
            <span>Parallax Scrolling</span>
          </label>
        </div>

        <div class="animation-demo">
          <h4>Animation Test:</h4>
          <div class="demo-buttons">
            <button onclick="testAnimation('fade')">Fade</button>
            <button onclick="testAnimation('slide')">Slide</button>
            <button onclick="testAnimation('scale')">Scale</button>
            <button onclick="testAnimation('bounce')">Bounce</button>
          </div>
          <div id="animation-test-element">Test Element</div>
        </div>
      </div>
    </div>

    <!-- PERFORMANCE TAB -->
    <div id="performance-tab" class="tab-content">
      <div class="control-section">
        <h2>‚ö° Performance Controls</h2>
        
        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.enable_lazy_loading %}checked{% endif %}>
            <span>Lazy Load Images</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.enable_prefetching %}checked{% endif %}>
            <span>Prefetch Resources</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.optimize_low_end %}checked{% endif %}>
            <span>Optimize for Low-end Devices</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.webp_conversion %}checked{% endif %}>
            <span>Convert Images to WebP</span>
          </label>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.hardware_acceleration %}checked{% endif %}>
            <span>Hardware Acceleration</span>
          </label>
        </div>

        <div class="control-row">
          <label>Image Quality:</label>
          <input type="range" min="60" max="100" value="{{ section.settings.image_quality | default: 85 }}">
          <span class="range-value">{{ section.settings.image_quality | default: 85 }}%</span>
        </div>

        <div class="performance-stats">
          <h4>Performance Metrics:</h4>
          <div class="metric">
            <span>Page Load Time:</span>
            <span id="load-time">--</span>
          </div>
          <div class="metric">
            <span>First Contentful Paint:</span>
            <span id="fcp-time">--</span>
          </div>
          <div class="metric">
            <span>Largest Contentful Paint:</span>
            <span id="lcp-time">--</span>
          </div>
        </div>
      </div>
    </div>

    <!-- ADVANCED TAB -->
    <div id="advanced-tab" class="tab-content">
      <div class="control-section">
        <h2>‚öôÔ∏è Advanced Settings</h2>
        
        <div class="control-row">
          <label>Custom CSS Classes:</label>
          <textarea placeholder="Enter custom CSS classes for Pipeline elements">{{ section.settings.custom_classes }}</textarea>
        </div>

        <div class="control-row">
          <label>Custom JavaScript:</label>
          <textarea placeholder="Enter custom JavaScript for Pipeline features">{{ section.settings.custom_js }}</textarea>
        </div>

        <div class="control-row">
          <label class="control-toggle">
            <input type="checkbox" {% if section.settings.debug_mode %}checked{% endif %}>
            <span>Debug Mode (Console Logging)</span>
          </label>
        </div>

        <div class="control-row">
          <label>Feature Priority Loading:</label>
          <select>
            <option value="performance" {% if section.settings.priority == 'performance' %}selected{% endif %}>Performance First</option>
            <option value="visual" {% if section.settings.priority == 'visual' %}selected{% endif %}>Visual First</option>
            <option value="balanced" {% if section.settings.priority == 'balanced' %}selected{% endif %}>Balanced</option>
          </select>
        </div>

        <div class="advanced-tools">
          <h4>Developer Tools:</h4>
          <button onclick="generateCustomCSS()">Generate Custom CSS</button>
          <button onclick="exportThemeData()">Export Theme Data</button>
          <button onclick="resetToDefaults()">Reset All Settings</button>
          <button onclick="validateSettings()">Validate Settings</button>
        </div>
      </div>
    </div>

  </div>
</div>

<script>
// Tab switching
function showTab(tabName) {
  // Hide all tabs
  document.querySelectorAll('.tab-content').forEach(tab => {
    tab.classList.remove('active');
  });
  document.querySelectorAll('.tab-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // Show selected tab
  document.getElementById(tabName + '-tab').classList.add('active');
  event.target.classList.add('active');
}

// Master toggle
document.getElementById('pipeline-master-toggle').addEventListener('change', function() {
  const enabled = this.checked;
  document.body.classList.toggle('pipeline-all-enabled', enabled);
  
  // Update all individual toggles
  document.querySelectorAll('.control-toggle input[type="checkbox"]').forEach(checkbox => {
    checkbox.checked = enabled;
    checkbox.dispatchEvent(new Event('change'));
  });
});

// Range value updates
document.querySelectorAll('input[type="range"]').forEach(range => {
  range.addEventListener('input', function() {
    const valueDisplay = this.parentElement.querySelector('.range-value');
    if (valueDisplay) {
      valueDisplay.textContent = this.value + (this.dataset.unit || 'px');
    }
  });
});

// Animation test
function testAnimation(type) {
  const element = document.getElementById('animation-test-element');
  element.className = ''; // Reset
  setTimeout(() => {
    element.classList.add('demo-animation', 'demo-' + type);
  }, 50);
}

// Advanced functions
function resetAllSettings() {
  if (confirm('Reset all Pipeline settings to defaults? This cannot be undone.')) {
    location.reload();
  }
}

function exportSettings() {
  const settings = {};
  document.querySelectorAll('input, select, textarea').forEach(input => {
    if (input.id || input.name) {
      settings[input.id || input.name] = input.type === 'checkbox' ? input.checked : input.value;
    }
  });
  
  const dataStr = JSON.stringify(settings, null, 2);
  const blob = new Blob([dataStr], {type: 'application/json'});
  const url = URL.createObjectURL(blob);
  
  const a = document.createElement('a');
  a.href = url;
  a.download = 'pipeline-settings.json';
  a.click();
}

function generateCustomCSS() {
  // Generate CSS based on current settings
  let css = '/* Pipeline Custom CSS */\n';
  
  // Add CSS based on current form values
  const zoomLevel = document.querySelector('input[type="range"]').value;
  css += `:root { --pipeline-zoom-level: ${zoomLevel}; }\n`;
  
  // Copy to clipboard
  navigator.clipboard.writeText(css).then(() => {
    alert('Custom CSS copied to clipboard!');
  });
}

// Performance monitoring
function updatePerformanceStats() {
  if ('performance' in window) {
    const navigation = performance.getEntriesByType('navigation')[0];
    if (navigation) {
      document.getElementById('load-time').textContent = Math.round(navigation.loadEventEnd) + 'ms';
    }
    
    // Get paint metrics
    const paintMetrics = performance.getEntriesByType('paint');
    paintMetrics.forEach(metric => {
      if (metric.name === 'first-contentful-paint') {
        document.getElementById('fcp-time').textContent = Math.round(metric.startTime) + 'ms';
      }
    });
  }
}

// Initialize
document.addEventListener('DOMContentLoaded', function() {
  updatePerformanceStats();
  
  // Auto-save settings
  document.querySelectorAll('input, select, textarea').forEach(input => {
    input.addEventListener('change', function() {
      localStorage.setItem('pipeline-settings', JSON.stringify({
        [this.id || this.name]: this.type === 'checkbox' ? this.checked : this.value
      }));
    });
  });
});
</script>

<style>
.pipeline-master-control {
  padding: 2rem 0;
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
  min-height: 100vh;
}

.control-header {
  text-align: center;
  margin-bottom: 3rem;
  padding: 2rem;
  background: white;
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.control-header h1 {
  font-size: 2.5rem;
  color: #2c2c2c;
  margin-bottom: 0.5rem;
}

.global-controls {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem;
  margin-top: 2rem;
}

.master-toggle {
  display: flex;
  align-items: center;
  gap: 1rem;
  font-size: 1.125rem;
  font-weight: 600;
}

.toggle-slider {
  position: relative;
  width: 60px;
  height: 32px;
  background: #ddd;
  border-radius: 16px;
  transition: all 0.3s ease;
  cursor: pointer;
}

.master-toggle input:checked + .toggle-slider {
  background: #2c2c2c;
}

.toggle-slider::before {
  content: '';
  position: absolute;
  top: 4px;
  left: 4px;
  width: 24px;
  height: 24px;
  background: white;
  border-radius: 50%;
  transition: all 0.3s ease;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.master-toggle input:checked + .toggle-slider::before {
  transform: translateX(28px);
}

.reset-btn, .export-btn {
  padding: 10px 20px;
  border: 2px solid #2c2c2c;
  background: white;
  color: #2c2c2c;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.reset-btn:hover, .export-btn:hover {
  background: #2c2c2c;
  color: white;
}

.control-tabs {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 3rem;
  overflow-x: auto;
  padding: 1rem;
  background: white;
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.tab-btn {
  padding: 12px 24px;
  border: none;
  background: transparent;
  color: #666;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.tab-btn.active,
.tab-btn:hover {
  background: #2c2c2c;
  color: white;
}

.tab-content {
  display: none;
  background: white;
  padding: 3rem;
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.tab-content.active {
  display: block;
}

.control-section h2 {
  font-size: 1.875rem;
  color: #2c2c2c;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid #f1f3f4;
}

.control-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 0;
  border-bottom: 1px solid #f1f3f4;
}

.control-row:last-child {
  border-bottom: none;
}

.control-toggle {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  cursor: pointer;
}

.control-toggle input[type="checkbox"] {
  width: 20px;
  height: 20px;
  accent-color: #2c2c2c;
}

.control-row input[type="range"] {
  flex: 1;
  max-width: 200px;
  margin: 0 1rem;
}

.control-row input[type="text"],
.control-row input[type="color"],
.control-row select {
  padding: 8px 12px;
  border: 2px solid #e1e5e9;
  border-radius: 8px;
  font-size: 0.875rem;
}

.control-row textarea {
  width: 100%;
  min-height: 100px;
  padding: 12px;
  border: 2px solid #e1e5e9;
  border-radius: 8px;
  resize: vertical;
  font-family: monospace;
}

.range-value {
  min-width: 60px;
  text-align: center;
  font-weight: bold;
  color: #2c2c2c;
}

.preview-box {
  margin-top: 2rem;
  padding: 1.5rem;
  background: #f8f9fa;
  border-radius: 12px;
  text-align: center;
}

.preview-box button {
  background: #2c2c2c;
  color: white;
  border: none;
  padding: 12px 24px;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.preview-box button:hover {
  background: #1a1a1a;
  transform: translateY(-2px);
}

.zoom-preview-image {
  width: 120px;
  height: 120px;
  margin: 1rem auto;
  border-radius: 8px;
  overflow: hidden;
  border: 2px solid #e1e5e9;
}

.zoom-preview-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.animation-demo {
  margin-top: 2rem;
  padding: 1.5rem;
  background: #f8f9fa;
  border-radius: 12px;
  text-align: center;
}

.demo-buttons {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin: 1rem 0;
}

.demo-buttons button {
  padding: 8px 16px;
  border: 2px solid #2c2c2c;
  background: white;
  color: #2c2c2c;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.demo-buttons button:hover {
  background: #2c2c2c;
  color: white;
}

#animation-test-element {
  width: 80px;
  height: 80px;
  background: linear-gradient(45deg, #667eea, #764ba2);
  border-radius: 50%;
  margin: 2rem auto;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: bold;
  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.demo-animation.demo-fade {
  opacity: 0.3;
}

.demo-animation.demo-slide {
  transform: translateX(50px);
}

.demo-animation.demo-scale {
  transform: scale(1.3);
}

.demo-animation.demo-bounce {
  animation: demoBounce 0.6s ease;
}

@keyframes demoBounce {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.3); }
}

.performance-stats {
  margin-top: 2rem;
  padding: 1.5rem;
  background: #f8f9fa;
  border-radius: 12px;
}

.metric {
  display: flex;
  justify-content: space-between;
  padding: 0.5rem 0;
  border-bottom: 1px solid #e9ecef;
}

.metric:last-child {
  border-bottom: none;
}

.advanced-tools {
  margin-top: 2rem;
  padding: 1.5rem;
  background: #f8f9fa;
  border-radius: 12px;
}

.advanced-tools button {
  margin: 0.5rem;
  padding: 10px 20px;
  border: 2px solid #2c2c2c;
  background: white;
  color: #2c2c2c;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.advanced-tools button:hover {
  background: #2c2c2c;
  color: white;
}

@media (max-width: 768px) {
  .control-tabs {
    flex-wrap: wrap;
  }
  
  .tab-content {
    padding: 2rem 1.5rem;
  }
  
  .control-row {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .control-row input[type="range"] {
    max-width: 100%;
  }
  
  .demo-buttons {
    flex-wrap: wrap;
  }
}
</style>

{% schema %}
{
  "name": "Pipeline Master Control",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Global Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_all_pipeline",
      "default": true,
      "label": "Enable all Pipeline features"
    },
    {
      "type": "header",
      "content": "Search Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_enhanced_search",
      "default": true,
      "label": "Enable Pipeline search"
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "default": "Search our e-bikes...",
      "label": "Search placeholder"
    },
    {
      "type": "range",
      "id": "search_blur",
      "min": 0,
      "max": 20,
      "default": 10,
      "label": "Background blur amount"
    },
    {
      "type": "color",
      "id": "search_button_color",
      "default": "#2c2c2c",
      "label": "Search button color"
    },
    {
      "type": "checkbox",
      "id": "search_predictive",
      "default": true,
      "label": "Predictive search"
    },
    {
      "type": "checkbox",
      "id": "search_close_on_outside",
      "default": true,
      "label": "Close on outside click"
    },
    {
      "type": "header",
      "content": "Image Zoom Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_image_zoom",
      "default": true,
      "label": "Enable image zoom"
    },
    {
      "type": "range",
      "id": "zoom_level",
      "min": 1.5,
      "max": 4,
      "step": 0.1,
      "default": 2,
      "label": "Desktop zoom level"
    },
    {
      "type": "range",
      "id": "mobile_zoom_level",
      "min": 1.2,
      "max": 3,
      "step": 0.1,
      "default": 1.5,
      "label": "Mobile zoom level"
    },
    {
      "type": "checkbox",
      "id": "zoom_show_indicators",
      "default": true,
      "label": "Show zoom indicators"
    },
    {
      "type": "checkbox",
      "id": "zoom_on_hover",
      "default": true,
      "label": "Zoom on hover"
    },
    {
      "type": "checkbox",
      "id": "zoom_fullscreen_mobile",
      "default": true,
      "label": "Full-screen mobile zoom"
    },
    {
      "type": "select",
      "id": "zoom_speed",
      "options": [
        { "value": "fast", "label": "Fast" },
        { "value": "normal", "label": "Normal" },
        { "value": "slow", "label": "Slow" }
      ],
      "default": "normal",
      "label": "Zoom animation speed"
    },
    {
      "type": "header",
      "content": "Cart Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_enhanced_cart",
      "default": true,
      "label": "Enable Pipeline cart"
    },
    {
      "type": "range",
      "id": "cart_width",
      "min": 300,
      "max": 500,
      "default": 420,
      "label": "Cart drawer width"
    },
    {
      "type": "checkbox",
      "id": "cart_show_count_badge",
      "default": true,
      "label": "Show count badge"
    },
    {
      "type": "checkbox",
      "id": "cart_blur_background",
      "default": true,
      "label": "Blur background"
    },
    {
      "type": "checkbox",
      "id": "cart_auto_open",
      "default": false,
      "label": "Auto-open after add"
    },
    {
      "type": "select",
      "id": "cart_animation",
      "options": [
        { "value": "slide", "label": "Slide In" },
        { "value": "fade", "label": "Fade In" },
        { "value": "scale", "label": "Scale In" }
      ],
      "default": "slide",
      "label": "Cart animation"
    },
    {
      "type": "select",
      "id": "cart_button_style",
      "options": [
        { "value": "rounded", "label": "Rounded" },
        { "value": "square", "label": "Square" },
        { "value": "pill", "label": "Pill Shape" }
      ],
      "default": "rounded",
      "label": "Button style"
    },
    {
      "type": "header",
      "content": "Gallery Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_gallery_enhancements",
      "default": true,
      "label": "Enable gallery enhancements"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        { "value": "grid", "label": "Grid" },
        { "value": "slider", "label": "Slider" },
        { "value": "stacked", "label": "Stacked" }
      ],
      "default": "grid",
      "label": "Gallery layout"
    },
    {
      "type": "range",
      "id": "gallery_border_radius",
      "min": 0,
      "max": 24,
      "default": 12,
      "label": "Border radius"
    },
    {
      "type": "select",
      "id": "gallery_hover",
      "options": [
        { "value": "lift", "label": "Lift Up" },
        { "value": "scale", "label": "Scale" },
        { "value": "none", "label": "No Effect" }
      ],
      "default": "lift",
      "label": "Hover effect"
    },
    {
      "type": "checkbox",
      "id": "gallery_show_badges",
      "default": true,
      "label": "Show media badges"
    },
    {
      "type": "checkbox",
      "id": "gallery_lazy_load",
      "default": true,
      "label": "Lazy load images"
    },
    {
      "type": "header",
      "content": "Animation Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_animations",
      "default": true,
      "label": "Enable animations"
    },
    {
      "type": "select",
      "id": "animation_speed",
      "options": [
        { "value": "slow", "label": "Slow" },
        { "value": "normal", "label": "Normal" },
        { "value": "fast", "label": "Fast" }
      ],
      "default": "normal",
      "label": "Animation speed"
    },
    {
      "type": "checkbox",
      "id": "scroll_animations",
      "default": true,
      "label": "Scroll animations"
    },
    {
      "type": "checkbox",
      "id": "hover_animations",
      "default": true,
      "label": "Hover animations"
    },
    {
      "type": "checkbox",
      "id": "button_ripple",
      "default": true,
      "label": "Button ripple effects"
    },
    {
      "type": "checkbox",
      "id": "stagger_animations",
      "default": true,
      "label": "Staggered animations"
    },
    {
      "type": "range",
      "id": "stagger_delay",
      "min": 50,
      "max": 300,
      "default": 100,
      "label": "Stagger delay (ms)"
    },
    {
      "type": "checkbox",
      "id": "parallax_effects",
      "default": false,
      "label": "Parallax scrolling"
    },
    {
      "type": "header",
      "content": "Performance Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_lazy_loading",
      "default": true,
      "label": "Lazy loading"
    },
    {
      "type": "checkbox",
      "id": "enable_prefetching",
      "default": true,
      "label": "Resource prefetching"
    },
    {
      "type": "checkbox",
      "id": "optimize_low_end",
      "default": false,
      "label": "Low-end optimization"
    },
    {
      "type": "checkbox",
      "id": "webp_conversion",
      "default": true,
      "label": "WebP conversion"
    },
    {
      "type": "checkbox",
      "id": "hardware_acceleration",
      "default": true,
      "label": "Hardware acceleration"
    },
    {
      "type": "range",
      "id": "image_quality",
      "min": 60,
      "max": 100,
      "default": 85,
      "label": "Image quality (%)"
    },
    {
      "type": "header",
      "content": "Advanced Settings"
    },
    {
      "type": "textarea",
      "id": "custom_classes",
      "label": "Custom CSS classes"
    },
    {
      "type": "textarea",
      "id": "custom_js",
      "label": "Custom JavaScript"
    },
    {
      "type": "checkbox",
      "id": "debug_mode",
      "default": false,
      "label": "Debug mode"
    },
    {
      "type": "select",
      "id": "priority",
      "options": [
        { "value": "performance", "label": "Performance First" },
        { "value": "visual", "label": "Visual First" },
        { "value": "balanced", "label": "Balanced" }
      ],
      "default": "balanced",
      "label": "Loading priority"
    }
  ],
  "presets": [
    {
      "name": "Pipeline Master Control"
    }
  ]
}
{% endschema %}